{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","status","classes","makeStyles","theme","root","flexGrow","input","backgroundColor","width","formControl","margin","spacing","minWidth","selectEmpty","marginTop","button","height","useStyles","useState","error","setError","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","className","Grid","container","direction","justify","alignItems","item","sm","xs","autoComplete","TextField","label","value","onChange","e","target","placeholder","fullWidth","style","InputLabelProps","shrink","variant","FormControl","InputLabel","Select","name","labelId","event","MenuItem","Button","onClick","trim","length","setTimeout","preventDefault","text","completed","Math","random","color","endIcon","Icon","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","App","setFilteredTodos","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b592bb4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAtbRLiY_3Y7CCyk2V89abmHtREjBi4pDs\",\n  authDomain: \"todo-list-df9e3.firebaseapp.com\",\n  projectId: \"todo-list-df9e3\",\n  storageBucket: \"todo-list-df9e3.appspot.com\",\n  messagingSenderId: \"310210229228\",\n  appId: \"1:310210229228:web:de538df498d0445ac686c9\"\n};\n\n// Initialize Firebase\nconst fb =  firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore();\n","import {useState} from 'react';\nimport {db} from '../firebase-config';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n  FormControl,\n  Grid,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Icon\n} from '@material-ui/core';\n\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus, status}) => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1\n    },\n    input: {\n      backgroundColor: 'white',\n      width: '94%',\n\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: '94%',\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(1),\n      width:'93%',\n      height: '6vh',\n    }\n  }));\n\n  const classes = useStyles();\n  const [error, setError] = useState(false);\n\n  const submitTodoHandler = e => {\n\n    if(inputText.trim().length === 0){\n      setError(true);\n      setTimeout(()=>{\n        setError(false);\n      },1000);\n      return;\n    }    \n\n    setError(false);\n\n    e.preventDefault();\n    setTodos([...todos, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000\n    }])\n    guardarEnFirebase({\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000\n    })\n    setInputText('')\n  }\n\n  const inputTextHandler = e => setInputText(e.target.value);\n\n  const statusHandler = event => setStatus(event.target.value);\n\n  const guardarEnFirebase = tarea => {\n    // Add a new document with a generated id.\n    db.collection(\"todos\").add(tarea)\n    .then((docRef) => {\n      console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\">\n        <Grid item sm={5} xs={12}>\n          <div className={classes.root}  autoComplete=\"off\">\n            <TextField\n              className={classes.input}\n              id=\"illed-full-width\"\n              label=\"Tarea\"\n              value={inputText}\n              onChange={inputTextHandler}\n              placeholder=\"Ingresa una tarea\"\n              fullWidth\n              margin=\"normal\"\n              style={{\n              margin: 8\n            }}\n              InputLabelProps={{\n              shrink: true\n            }}\n              variant=\"filled\"\n            />\n          </div>\n        </Grid>\n        <Grid item sm={1} xs={12}>\n        </Grid>\n        <Grid item sm={5} xs={12}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Seleccionar</InputLabel>\n            <Select\n              name=\"todos\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              onChange={statusHandler}\n              value={status}\n            >\n              <MenuItem value=\"all\">Todas</MenuItem>\n              <MenuItem value=\"completed\">Completas</MenuItem>\n              <MenuItem value=\"uncompleted\">Incompletas</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item sm={2} xs={12}>\n          <Button\n            // disabled={inputText.trim().length === 0}\n            onClick={submitTodoHandler}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            endIcon={<Icon>send</Icon>}\n            >\n            Send\n          </Button>\n          <p className=\"alert-error\">{error && 'Todos los datos son obligatorios!!'}</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Form;","import {db} from '../firebase-config';\n\nconst Todo = ({todo}) => {\n\n  const deleteHandler = () => {\n    db.collection(\"todos\").doc(todo.id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n    }).catch((error) => {\n        console.error(\"Error removing document: \", error);\n    });\n  }\n\n  const completeHandler = () => editarCompleted(todo)\n  \n\n  const editarCompleted = tarea => {\n    // Add a new document in collection \"cities\"\n    db.collection(\"todos\").doc(tarea.id).set({\n      ...tarea, \n      completed: !tarea.completed\n    })\n    .then(() => {\n      console.log(\"Document successfully written!\");\n    })\n    .catch((error) => {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed && \"completed\"}`}>{todo.text}</li> \n      <button onClick={completeHandler} className={`complete-btn ${todo.completed && \"boton-rojo\"}  `}>\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import Todo from './Todo';\n\nconst TodoList = ({filteredTodos}) => {\n  return (\n    <div>\n      <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;","import {useState, useEffect} from 'react';\nimport {db} from './firebase-config';\n\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const traerDesdeFirebase = () => {\n    db.collection(\"todos\").onSnapshot((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          docs.push({...doc.data(), id: doc.id})\n        });\n        setTodos(docs)\n    });\n  }\n\n  useEffect(traerDesdeFirebase, [])\n\n \n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status) {\n        case 'completed' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n        break;\n        case 'uncompleted' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n        break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n    filteredHandler();\n  },[todos, status])\n\n\n  return (\n    <div>\n      <header>\n        <h1>TO DO LIST</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        status={status}\n      />\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './firebase-config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}