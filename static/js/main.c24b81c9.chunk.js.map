{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","status","classes","makeStyles","theme","root","flexGrow","input","backgroundColor","width","formControl","margin","spacing","minWidth","selectEmpty","marginTop","button","height","useStyles","useState","error","setError","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","className","Grid","container","direction","justify","alignItems","item","sm","xs","autoComplete","TextField","label","value","onChange","e","target","placeholder","fullWidth","style","InputLabelProps","shrink","variant","FormControl","InputLabel","Select","name","labelId","event","MenuItem","Button","onClick","trim","length","setTimeout","preventDefault","text","completed","Math","random","color","endIcon","Icon","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","App","setFilteredTodos","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c24b81c9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAtbRLiY_3Y7CCyk2V89abmHtREjBi4pDs\",\r\n  authDomain: \"todo-list-df9e3.firebaseapp.com\",\r\n  projectId: \"todo-list-df9e3\",\r\n  storageBucket: \"todo-list-df9e3.appspot.com\",\r\n  messagingSenderId: \"310210229228\",\r\n  appId: \"1:310210229228:web:de538df498d0445ac686c9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fb =  firebase.initializeApp(firebaseConfig);\r\nexport const db = fb.firestore();\r\n","import {useState} from 'react';\r\nimport {db} from '../firebase-config';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n  FormControl,\r\n  Grid,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Icon\r\n} from '@material-ui/core';\r\n\r\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus, status}) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    input: {\r\n      backgroundColor: 'white',\r\n      width: '94%',\r\n\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '94%',\r\n      backgroundColor: 'white'\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      width:'93%',\r\n      height: '6vh',\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [error, setError] = useState(false);\r\n\r\n  const submitTodoHandler = e => {\r\n\r\n    if(inputText.trim().length === 0){\r\n      setError(true);\r\n      setTimeout(()=>{\r\n        setError(false);\r\n      },1000);\r\n      return;\r\n    }    \r\n\r\n    setError(false);\r\n\r\n    e.preventDefault();\r\n    setTodos([...todos, {\r\n      text: inputText,\r\n      completed: false,\r\n      id: Math.random() * 10000\r\n    }])\r\n    guardarEnFirebase({\r\n      text: inputText,\r\n      completed: false,\r\n      id: Math.random() * 10000\r\n    })\r\n    setInputText('')\r\n  }\r\n\r\n  const inputTextHandler = e => setInputText(e.target.value);\r\n\r\n  const statusHandler = event => setStatus(event.target.value);\r\n\r\n  const guardarEnFirebase = tarea => {\r\n    // Add a new document with a generated id.\r\n    db.collection(\"todos\").add(tarea)\r\n    .then((docRef) => {\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\">\r\n        <Grid item sm={5} xs={12}>\r\n          <div className={classes.root}  autoComplete=\"off\">\r\n            <TextField\r\n              className={classes.input}\r\n              id=\"illed-full-width\"\r\n              label=\"Tarea\"\r\n              value={inputText}\r\n              onChange={inputTextHandler}\r\n              placeholder=\"Ingresa una tarea\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              style={{\r\n              margin: 8\r\n            }}\r\n              InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={1} xs={12}>\r\n        </Grid>\r\n        <Grid item sm={5} xs={12}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Seleccionar</InputLabel>\r\n            <Select\r\n              name=\"todos\"\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={statusHandler}\r\n              value={status}\r\n            >\r\n              <MenuItem value=\"all\">Todas</MenuItem>\r\n              <MenuItem value=\"completed\">Completas</MenuItem>\r\n              <MenuItem value=\"uncompleted\">Incompletas</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item sm={2} xs={12}>\r\n          <Button\r\n            // disabled={inputText.trim().length === 0}\r\n            onClick={submitTodoHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            endIcon={<Icon>send</Icon>}\r\n            >\r\n            Send\r\n          </Button>\r\n          <p className=\"alert-error\">{error && 'Todos los datos son obligatorios!!'}</p>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import {db} from '../firebase-config';\r\n\r\nconst Todo = ({todo}) => {\r\n\r\n  const deleteHandler = () => {\r\n    db.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n      console.log(\"Document successfully deleted!\");\r\n    }).catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n    });\r\n  }\r\n\r\n  const completeHandler = () => editarCompleted(todo)\r\n  \r\n\r\n  const editarCompleted = tarea => {\r\n    // Add a new document in collection \"cities\"\r\n    db.collection(\"todos\").doc(tarea.id).set({\r\n      ...tarea, \r\n      completed: !tarea.completed\r\n    })\r\n    .then(() => {\r\n      console.log(\"Document successfully written!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed && \"completed\"}`}>{todo.text}</li> \r\n      <button onClick={completeHandler} className={`complete-btn ${todo.completed && \"boton-rojo\"}  `}>\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import Todo from './Todo';\r\n\r\nconst TodoList = ({filteredTodos}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {filteredTodos.map(todo => (\r\n            <Todo\r\n              todo={todo}\r\n              key={todo.id}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import {useState, useEffect} from 'react';\r\nimport {db} from './firebase-config';\r\n\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('all');\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  const traerDesdeFirebase = () => {\r\n    db.collection(\"todos\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n          docs.push({...doc.data(), id: doc.id})\r\n        });\r\n        setTodos(docs)\r\n    });\r\n  }\r\n\r\n  useEffect(traerDesdeFirebase, [])\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    const filteredHandler = () => {\r\n      switch(status) {\r\n        case 'completed' :\r\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\r\n        break;\r\n        case 'uncompleted' :\r\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\r\n        break;\r\n        default:\r\n          setFilteredTodos(todos);\r\n      }\r\n    }\r\n    filteredHandler();\r\n  },[todos, status])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>TO DO LIST</h1>\r\n      </header>\r\n      <Form\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setStatus={setStatus}\r\n        status={status}\r\n      />\r\n      <TodoList \r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        filteredTodos={filteredTodos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './firebase-config';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}